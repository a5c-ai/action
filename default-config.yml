# Built-in default configuration for a5c Runner
# This configuration is embedded in the action and provides sensible defaults
# Users can override any of these settings in their .a5c/config.yml file

# Default settings applied to all agents
defaults:
  # Default model and execution settings
  max_turns: 10
  timeout: 30
  verbose: true
  
  # Default user whitelist (if not specified at agent level)
  # If not set, falls back to team members of the org/project
  user_whitelist: []
  # Default CLI agent template to use (optional - will auto-detect if not specified)
  # Available options: claude, codex, azure_codex, gemini # falls back to envs.A5C_CLI_TOOL
  # cli_agent: "claude"

# Predefined CLI command templates for different AI providers
cli_agents:
  claude:
    cli_command: "cat {{prompt_path}} | claude --mcp-config {{mcp_config}} -p 'fulfill the request' --output-format stream-json --allowedTools Bash,Read,Glob,Grep,Write,MultiEdit,Edit,NotebookRead,NotebookEdit,WebFetch,TodoRead,TodoWrite,WebSearch,Task,Agent,mcp__github,mcp__agent_reporter --dangerously-skip-permissions --verbose --model {{model}}"
    description: "Claude AI via claude-code CLI"
    model: "claude-sonnet-4-20250514"
  
  codex:
    cli_command: "codex exec --dangerously-bypass-approvals-and-sandbox -c model={{model}} --output-last-message /tmp/agent-output.md"
    model: "gpt-5-2025-08-07"
    inject_prompt_to_stdin: true
    inject_envs_to_prompt: false
    description: "OpenAI models via codex CLI"
    
  azure_codex:
    # translates into cli_command: "printenv | cat - {{prompt_path}} | COLORBT_SHOW_HIDDEN=1 RUST_BACKTRACE=full CODEX_QUIET_MODE=1 codex exec --dangerously-bypass-approvals-and-sandbox -c model=codex-mini -c model_provider=azure -c model_providers.azure.name=azure -c model_providers.azure.wire_api=responses -c model_providers.azure.base_url=https://{{envs.AZURE_OPENAI_PROJECT_NAME}}.openai.azure.com/openai -c model_providers.azure.env_key=AZURE_OPENAI_API_KEY -c model_providers.azure.query_params.api-version=2025-04-01-preview --output-last-message /tmp/agent-output.md"
    cli_command: "codex exec --dangerously-bypass-approvals-and-sandbox -c model={{model}} -c model_provider=azure -c model_providers.azure.name=azure -c model_providers.azure.wire_api=responses -c model_providers.azure.base_url=https://{{envs.AZURE_OPENAI_PROJECT_NAME}}.openai.azure.com/openai -c model_providers.azure.env_key=AZURE_OPENAI_API_KEY -c model_providers.azure.query_params.api-version=2025-04-01-preview --output-last-message /tmp/agent-output.md"
    envs: # prepends X=y to the cli command
      COLORBT_SHOW_HIDDEN: 1
      RUST_BACKTRACE: full
      CODEX_QUIET_MODE: 1
    model: "gpt-5" # default model to use if not specified in the agent or in the defaults.
    inject_prompt_to_stdin: true # inject prompt to stdin (prepends cat {{prompt_path}} | ) to the cli command
    inject_envs_to_prompt: false # inject envs to prompt (prepends printenv | ) to the cli command
    description: "Azure OpenAI via codex CLI"
  azure_model_router:
    # translates into cli_command: "printenv | cat - {{prompt_path}} | COLORBT_SHOW_HIDDEN=1 RUST_BACKTRACE=full CODEX_QUIET_MODE=1 codex exec --dangerously-bypass-approvals-and-sandbox -c model=codex-mini -c model_provider=azure -c model_providers.azure.name=azure -c model_providers.azure.wire_api=responses -c model_providers.azure.base_url=https://{{envs.AZURE_OPENAI_PROJECT_NAME}}.openai.azure.com/openai -c model_providers.azure.env_key=AZURE_OPENAI_API_KEY -c model_providers.azure.query_params.api-version=2025-04-01-preview --output-last-message /tmp/agent-output.md"
    cli_command: "codex exec --dangerously-bypass-approvals-and-sandbox -c model={{model}} -c model_provider=azure -c model_providers.azure.name=azure -c model_providers.azure.wire_api=chat -c model_providers.azure.base_url=https://{{envs.AZURE_OPENAI_PROJECT_NAME}}.cognitiveservices.azure.com/openai -c model_providers.azure.env_key=AZURE_OPENAI_API_KEY -c model_providers.azure.query_params.api-version=2025-01-01-preview --output-last-message /tmp/agent-output.md"
    envs: # prepends X=y to the cli command
      COLORBT_SHOW_HIDDEN: 1
      RUST_BACKTRACE: full
      CODEX_QUIET_MODE: 1
    model: "model-router" # default model to use if not specified in the agent or in the defaults.
    inject_prompt_to_stdin: true # inject prompt to stdin (prepends cat {{prompt_path}} | ) to the cli command
    inject_envs_to_prompt: true # inject envs to prompt (prepends printenv | ) to the cli command
    description: "Azure OpenAI via codex CLI with model-router"    
  gemini:
    cli_command: "gemini"
    envs:
      GEMINI_API_KEY: "{{envs.GEMINI_API_KEY}}"
    model: "gemini-2.5-pro"
    inject_prompt_to_stdin: true
    inject_envs_to_prompt: false
    description: "Google Gemini via official Gemini CLI"

# MCP Server Configuration
# Path to user-defined MCP servers (optional - built-in servers are always available)
mcp_config_path: ".a5c/mcps.json"

# Remote Agents Configuration
remote_agents:
  enabled: true
  cache_timeout: 120  # 2 hours
  retry_attempts: 5
  retry_delay: 2000   # 2 seconds
  sources:
    individual:
      # development agents
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/development/developer-agent.agent.md"
      #   alias: "developer-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/development/validator-agent.agent.md"
      #   alias: "validator-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/development/project-seeder-agent.agent.md"
      #   alias: "project-seeder-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/development/build-fixer-agent.agent.md"
      #   alias: "build-fixer-agent"
      # researcher agents
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/research/researcher-base-agent.agent.md"
      #   alias: "researcher-base-agent"
      - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/development/team-installer-agent.agent.md"
        alias: "team-installer-agent"      

      # communication agents
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/communication/discord-manager-agent.agent.md"
      #   alias: "discord-manager-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/communication/slack-manager-agent.agent.md"
      #   alias: "slack-manager-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/communication/content-writer-agent.agent.md"
      #   alias: "content-writer-agent"

      # news agents
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/news/news-aggregator-agent.agent.md"
      #   alias: "news-aggregator-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/news/project-news-analyzer-agent.agent.md"
      #   alias: "project-news-analyzer-agent"
      # media agents
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/video-generation-agent.agent.md"
      #   alias: "video-generation-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/video-editing-agent.agent.md"
      #   alias: "video-editing-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/image-generation-agent.agent.md"
      #   alias: "image-generation-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/image-editing-agent.agent.md"
      #   alias: "image-editing-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/music-generation-agent.agent.md"
      #   alias: "music-generation-agent"
      # - uri: "https://raw.githubusercontent.com/a5c-ai/registry/main/agents/media/speech-generation-agent.agent.md"
      #   alias: "speech-generation-agent"
    repositories: []       # List of repository configurations



# File processing configuration
file_processing:
  max_file_size: 1048576  # 1MB
  include_patterns:
    - "**/*.js"
    - "**/*.ts"
    - "**/*.jsx"
    - "**/*.tsx"
    - "**/*.py"
    - "**/*.java"
    - "**/*.go"
    - "**/*.rs"
    - "**/*.cpp"
    - "**/*.c"
    - "**/*.cs"
    - "**/*.php"
    - "**/*.rb"
    - "**/*.swift"
    - "**/*.kt"
    - "**/*.scala"
    - "**/*.md"
    - "**/*.yml"
    - "**/*.yaml"
    - "**/*.json"
    - "**/*.xml"
    - "**/*.html"
    - "**/*.css"
    - "**/*.scss"
    - "**/*.sql"
  exclude_patterns:
    - "node_modules/**"
    - "dist/**"
    - "build/**"
    - "target/**"
    - "vendor/**"
    - ".git/**"
    - "*.log"
    - "*.tmp"
    - "**/*.png"
    - "**/*.jpg"
    - "**/*.jpeg"
    - "**/*.gif"
    - "**/*.bmp"
    - "**/*.ico"
    - "**/*.pdf"
    - "**/*.zip"
    - "**/*.tar.gz"
    - "**/*.rar"
    - "**/*.7z"

# Agent Discovery Configuration
agent_discovery:
  enabled: true
  max_agents_in_context: 10
  include_same_directory: true

# Remote prompt configuration
prompt_uri:
  cache_timeout: 60      # Cache timeout in minutes
  retry_attempts: 3      # Number of retry attempts
  retry_delay: 1000      # Delay between retries in ms


